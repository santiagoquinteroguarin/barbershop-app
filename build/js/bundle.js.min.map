{"version":3,"sources":["app.js"],"names":["page","cita","name","date","time","services","startApp","showServices","showSection","changeSection","nextPage","previousPage","pagerButtons","showSummary","previousSection","document","querySelector","classList","remove","add","previousTab","querySelectorAll","forEach","link","addEventListener","e","preventDefault","parseInt","target","dataset","step","async","response","fetch","data","json","service","id","price","serviceName","createElement","textContent","servicePrice","serviceDiv","appendChild","serviceId","onclick","selectService","error","console","log","element","tagName","parentElement","contains","deleteService","addService","firstElementChild","nextElementSibling","serviceObj","summaryDiv","Object","values","includes","noServices"],"mappings":"AAAA,IAAAA,KAAA,EAEA,MAAAC,KAAA,CACAC,KAAA,GACAC,KAAA,GACAC,KAAA,GACAC,SAAA,IAOA,SAAAC,WACAC,eAGAC,cAGAC,gBAGAC,WAEAC,eAGAC,eAGAC,cAGA,SAAAL,cAEA,MAAAM,EAAAC,SAAAC,cAAA,iBACAF,GACAA,EAAAG,UAAAC,OAAA,gBAGAH,SAAAC,cAAA,SAAAhB,MACAiB,UAAAE,IAAA,gBAEA,MAAAC,EAAAL,SAAAC,cAAA,kBACAI,GAEAA,EAAAH,UAAAC,OAAA,WAIAH,SAAAC,cAAA,eAAAhB,UACAiB,UAAAE,IAAA,WAGA,SAAAV,gBACAM,SAAAM,iBAAA,gBACAC,QAAAC,IACAA,EAAAC,iBAAA,QAAAC,IACAA,EAAAC,iBACA1B,KAAA2B,SAAAF,EAAAG,OAAAC,QAAAC,MAGAtB,cAEAI,mBAKAmB,eAAAxB,eACA,IACA,MAAAyB,QAAAC,MAAA,oBACAC,QAAAF,EAAAG,QACA9B,SAAAA,GAAA6B,EAGA7B,EAAAiB,QAAAc,IACA,MAAAC,GAAAA,EAAAnC,KAAAA,EAAAoC,MAAAA,GAAAF,EAIAG,EAAAxB,SAAAyB,cAAA,KACAD,EAAAE,YAAAvC,EACAqC,EAAAtB,UAAAE,IAAA,gBAEA,MAAAuB,EAAA3B,SAAAyB,cAAA,KACAE,EAAAD,YAAA,KAAAH,EACAI,EAAAzB,UAAAE,IAAA,iBAGA,MAAAwB,EAAA5B,SAAAyB,cAAA,OACAG,EAAA1B,UAAAE,IAAA,WAGAwB,EAAAC,YAAAL,GACAI,EAAAC,YAAAF,GACAC,EAAAd,QAAAgB,UAAAR,EAGAM,EAAAG,QAAAC,cAGAhC,SAAAC,cAAA,aAAA4B,YAAAD,KAEA,MAAAK,GACAC,QAAAC,IAAA,UAIA,SAAAH,cAAAtB,GACA,IAAA0B,EASA,GANAA,EADA,MAAA1B,EAAAG,OAAAwB,QACA3B,EAAAG,OAAAyB,cAEA5B,EAAAG,OAIAuB,EAAAlC,UAAAqC,SAAA,YACAH,EAAAlC,UAAAC,OAAA,YAGAqC,oBACA,CACAJ,EAAAlC,UAAAE,IAAA,YAQAqC,WANA,CACAnB,GAAAV,SAAAwB,EAAAtB,QAAAgB,WACA3C,KAAAiD,EAAAM,kBAAAhB,YACAH,MAAAa,EAAAM,kBAAAC,mBAAAjB,eAOA,SAAAc,iBAIA,SAAAC,WAAAG,GACA,MAAAtD,SAAAA,GAAAsD,EAGA,SAAAjD,WACAK,SAAAC,cAAA,SACAQ,iBAAA,QAAA,KACAxB,OAEAY,iBAIA,SAAAD,eACAI,SAAAC,cAAA,aACAQ,iBAAA,QAAA,KACAxB,OAEAY,iBAIA,SAAAA,eACA,MAAAF,EAAAK,SAAAC,cAAA,SACAL,EAAAI,SAAAC,cAAA,aAEA,IAAAhB,KACAW,EAAAM,UAAAE,IAAA,QACA,IAAAnB,MACAU,EAAAO,UAAAE,IAAA,QACAR,EAAAM,UAAAC,OAAA,UAEAP,EAAAM,UAAAC,OAAA,QACAR,EAAAO,UAAAC,OAAA,SAIAV,cAGA,SAAAK,cACA,MAAAX,KAAAA,EAAAC,KAAAA,EAAAC,KAAAA,EAAAC,SAAAA,GAAAJ,KAGA2D,EAAA7C,SAAAC,cAAA,oBAGA,GAAA6C,OAAAC,OAAA7D,MAAA8D,SAAA,IAAA,CACA,MAAAC,EAAAjD,SAAAyB,cAAA,KACAwB,EAAAvB,YAAA,kDACAuB,EAAA/C,UAAAE,IAAA,uBAGAyC,EAAAhB,YAAAoB,IA1LAjD,SAAAS,iBAAA,oBAAA,WACAlB","file":"bundle.js","sourcesContent":["let page = 1;\n\nconst cita = {\n    name: '',\n    date: '',\n    time: '',\n    services: [],\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    startApp();\n});\n\nfunction startApp() {\n    showServices();\n\n    // Resalta el DIV actual según el tab al que se presiona\n    showSection();\n\n    // oculta o muestra una sección según el tab al que se presiona\n    changeSection();\n\n    // paginación siguiente y anterior\n    nextPage();\n    \n    previousPage();\n\n    // Comprueba la pagina actual para ocultar o mostrar la paginación\n    pagerButtons();\n\n    // muestra el resumen de la cita o mensaje de error\n    showSummary();\n}\n\nfunction showSection() {\n    // eliminar show-section de la section anterior\n    const previousSection = document.querySelector('.show-section');\n    if(previousSection) {\n        previousSection.classList.remove('show-section');\n    }\n\n    const currentSection = document.querySelector(`#step-${page}`);\n    currentSection.classList.add('show-section');\n\n    const previousTab = document.querySelector('.tabs .current');\n    if(previousTab) {\n        // Eliminar la clase de current en el anterior\n        previousTab.classList.remove('current');\n    }\n    \n    // resalta el tab actual\n    const tab = document.querySelector(`[data-step=\"${page}\"]`);\n    tab.classList.add('current');\n}\n\nfunction changeSection() {\n    const links = document.querySelectorAll('.tabs button');\n    links.forEach(link => {\n        link.addEventListener('click', e => {\n            e.preventDefault();\n            page = parseInt(e.target.dataset.step);\n\n            // llamar la funcion de mostrar la seccion\n            showSection();\n\n            pagerButtons();\n        })\n    })\n}\n\nasync function showServices() {\n    try {\n        const response = await fetch('./servicios.json');\n        const data = await response.json();\n        const { services } = data;\n\n        // Generar HTML\n        services.forEach(service => {\n            const { id, name, price } = service;\n\n            // DOM Scripting\n            // Generar nombre del servicio\n            const serviceName = document.createElement('p');\n            serviceName.textContent = name;\n            serviceName.classList.add('service-name');\n            // Generar precio del servicio\n            const servicePrice = document.createElement('p');\n            servicePrice.textContent = `$ ${price}`;\n            servicePrice.classList.add('service-price');\n\n            // Generar div contenedor del servicio\n            const serviceDiv = document.createElement('div');\n            serviceDiv.classList.add('service');\n\n            // inyectar precio y nombre al div del servicio\n            serviceDiv.appendChild(serviceName);\n            serviceDiv.appendChild(servicePrice);\n            serviceDiv.dataset.serviceId = id;\n\n            // selcciona un servicio para la cita\n            serviceDiv.onclick = selectService;\n\n            // inyectar al HTML\n            document.querySelector('#services').appendChild(serviceDiv);\n        });\n    } catch (error) {\n        console.log('error');\n    }\n}\n\nfunction selectService(e) {\n    let element;\n    // forzar que el elemento al cual le damos click sea el div\n    if(e.target.tagName === 'P') {\n        element = e.target.parentElement;\n    } else {\n        element = e.target;\n    }\n\n    // cuando seleccionen un servicio añadirle la clase seleccionado\n    if(element.classList.contains('selected')) {\n        element.classList.remove('selected');\n\n        // eliminar servicio\n        deleteService();\n    } else {\n        element.classList.add('selected');\n\n        const serviceObj = {\n            id: parseInt(element.dataset.serviceId),\n            name: element.firstElementChild.textContent,\n            price: element.firstElementChild.nextElementSibling.textContent,\n        }\n        // agregar servicio\n        addService(serviceObj);\n    }\n}\n\nfunction deleteService() {\n\n}\n\nfunction addService(serviceObj) {\n    const { services } = serviceObj;\n}\n\nfunction nextPage() {\n    const nextPage = document.querySelector('#next');\n    nextPage.addEventListener('click', () => {\n        page++;\n        // volver a comprobar en que pagina esta el paginador\n        pagerButtons();\n    });\n}\n\nfunction previousPage() {\n    const previousPage = document.querySelector('#previous');\n    previousPage.addEventListener('click', () => {\n        page--;\n        // volver a comprobar en que pagina esta el paginador\n        pagerButtons();\n    });\n}\n\nfunction pagerButtons() {\n    const nextPage = document.querySelector('#next');\n    const previousPage = document.querySelector('#previous');\n\n    if(page === 1) {\n        previousPage.classList.add('hide')\n    } else if(page === 3) {\n        nextPage.classList.add('hide');\n        previousPage.classList.remove('hide');\n    } else {\n        previousPage.classList.remove('hide');\n        nextPage.classList.remove('hide');\n    }\n\n    // cambiar la seccion por la de la pagina\n    showSection();\n}\n\nfunction showSummary() {\n    const { name, date, time, services } = cita;\n\n    // seleccionar resumen\n    const summaryDiv = document.querySelector('.summary-content');\n\n    // validación para saber que los campos estan vacios\n    if(Object.values(cita).includes('')) {\n        const noServices = document.createElement('p');\n        noServices.textContent = 'Faltan datos de servicios, hora, fecha o nombre';\n        noServices.classList.add('invalid-appointment');\n        \n        // agregar a resumen div\n        summaryDiv.appendChild(noServices);\n    }\n}\n\n"]}