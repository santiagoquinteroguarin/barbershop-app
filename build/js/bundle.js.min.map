{"version":3,"sources":["app.js"],"names":["page","startApp","showServices","showSection","changeSection","nextPage","previousPage","pagerButtons","previousSection","document","querySelector","classList","remove","add","previousTab","querySelectorAll","forEach","link","addEventListener","e","preventDefault","parseInt","target","dataset","step","async","response","fetch","data","json","services","service","id","name","price","serviceName","createElement","textContent","servicePrice","serviceDiv","appendChild","serviceId","onclick","selectService","error","console","log","element","tagName","parentElement","contains"],"mappings":"AAAA,IAAAA,KAAA,EAMA,SAAAC,WACAC,eAGAC,cAGAC,gBAGAC,WAEAC,eAGAC,eAGA,SAAAJ,cAEA,MAAAK,EAAAC,SAAAC,cAAA,iBACAF,GACAA,EAAAG,UAAAC,OAAA,gBAGAH,SAAAC,cAAA,SAAAV,MACAW,UAAAE,IAAA,gBAEA,MAAAC,EAAAL,SAAAC,cAAA,kBACAI,GAEAA,EAAAH,UAAAC,OAAA,WAIAH,SAAAC,cAAA,eAAAV,UACAW,UAAAE,IAAA,WAGA,SAAAT,gBACAK,SAAAM,iBAAA,gBACAC,QAAAC,IACAA,EAAAC,iBAAA,QAAAC,IACAA,EAAAC,iBACApB,KAAAqB,SAAAF,EAAAG,OAAAC,QAAAC,MAGArB,cAEAI,mBAKAkB,eAAAvB,eACA,IACA,MAAAwB,QAAAC,MAAA,oBACAC,QAAAF,EAAAG,QACAC,SAAAA,GAAAF,EAGAE,EAAAd,QAAAe,IACA,MAAAC,GAAAA,EAAAC,KAAAA,EAAAC,MAAAA,GAAAH,EAIAI,EAAA1B,SAAA2B,cAAA,KACAD,EAAAE,YAAAJ,EACAE,EAAAxB,UAAAE,IAAA,gBAEA,MAAAyB,EAAA7B,SAAA2B,cAAA,KACAE,EAAAD,YAAA,KAAAH,EACAI,EAAA3B,UAAAE,IAAA,iBAGA,MAAA0B,EAAA9B,SAAA2B,cAAA,OACAG,EAAA5B,UAAAE,IAAA,WAGA0B,EAAAC,YAAAL,GACAI,EAAAC,YAAAF,GACAC,EAAAhB,QAAAkB,UAAAT,EAGAO,EAAAG,QAAAC,cAGAlC,SAAAC,cAAA,aAAA8B,YAAAD,KAEA,MAAAK,GACAC,QAAAC,IAAA,UAIA,SAAAH,cAAAxB,GACA,IAAA4B,EAGAA,EADA,MAAA5B,EAAAG,OAAA0B,QACA7B,EAAAG,OAAA2B,cAEA9B,EAAAG,OAIAyB,EAAApC,UAAAuC,SAAA,YACAH,EAAApC,UAAAC,OAAA,YAEAmC,EAAApC,UAAAE,IAAA,YAIA,SAAAR,WACAI,SAAAC,cAAA,SACAQ,iBAAA,QAAA,KACAlB,OAEAO,iBAIA,SAAAD,eACAG,SAAAC,cAAA,aACAQ,iBAAA,QAAA,KACAlB,OAEAO,iBAIA,SAAAA,eACA,MAAAF,EAAAI,SAAAC,cAAA,SACAJ,EAAAG,SAAAC,cAAA,aAEA,IAAAV,KACAM,EAAAK,UAAAE,IAAA,QACA,IAAAb,MACAK,EAAAM,UAAAE,IAAA,QACAP,EAAAK,UAAAC,OAAA,UAEAN,EAAAK,UAAAC,OAAA,QACAP,EAAAM,UAAAC,OAAA,SAIAT,cApJAM,SAAAS,iBAAA,oBAAA,WACAjB","file":"bundle.js","sourcesContent":["let page = 1;\n\ndocument.addEventListener('DOMContentLoaded', function() {\n    startApp();\n});\n\nfunction startApp() {\n    showServices();\n\n    // Resalta el DIV actual según el tab al que se presiona\n    showSection();\n\n    // oculta o muestra una sección según el tab al que se presiona\n    changeSection();\n\n    // paginación siguiente y anterior\n    nextPage();\n    \n    previousPage();\n\n    // Comprueba la pagina actual para ocultar o mostrar la paginación\n    pagerButtons();\n}\n\nfunction showSection() {\n    // eliminar show-section de la section anterior\n    const previousSection = document.querySelector('.show-section');\n    if(previousSection) {\n        previousSection.classList.remove('show-section');\n    }\n\n    const currentSection = document.querySelector(`#step-${page}`);\n    currentSection.classList.add('show-section');\n\n    const previousTab = document.querySelector('.tabs .current');\n    if(previousTab) {\n        // Eliminar la clase de current en el anterior\n        previousTab.classList.remove('current');\n    }\n    \n    // resalta el tab actual\n    const tab = document.querySelector(`[data-step=\"${page}\"]`);\n    tab.classList.add('current');\n}\n\nfunction changeSection() {\n    const links = document.querySelectorAll('.tabs button');\n    links.forEach(link => {\n        link.addEventListener('click', e => {\n            e.preventDefault();\n            page = parseInt(e.target.dataset.step);\n\n            // llamar la funcion de mostrar la seccion\n            showSection();\n\n            pagerButtons();\n        })\n    })\n}\n\nasync function showServices() {\n    try {\n        const response = await fetch('./servicios.json');\n        const data = await response.json();\n        const { services } = data;\n\n        // Generar HTML\n        services.forEach(service => {\n            const { id, name, price } = service;\n\n            // DOM Scripting\n            // Generar nombre del servicio\n            const serviceName = document.createElement('p');\n            serviceName.textContent = name;\n            serviceName.classList.add('service-name');\n            // Generar precio del servicio\n            const servicePrice = document.createElement('p');\n            servicePrice.textContent = `$ ${price}`;\n            servicePrice.classList.add('service-price');\n\n            // Generar div contenedor del servicio\n            const serviceDiv = document.createElement('div');\n            serviceDiv.classList.add('service');\n\n            // inyectar precio y nombre al div del servicio\n            serviceDiv.appendChild(serviceName);\n            serviceDiv.appendChild(servicePrice);\n            serviceDiv.dataset.serviceId = id;\n\n            // selcciona un servicio para la cita\n            serviceDiv.onclick = selectService;\n\n            // inyectar al HTML\n            document.querySelector('#services').appendChild(serviceDiv);\n        });\n    } catch (error) {\n        console.log('error');\n    }\n}\n\nfunction selectService(e) {\n    let element;\n    // forzar que el elemento al cual le damos click sea el div\n    if(e.target.tagName === 'P') {\n        element = e.target.parentElement;\n    } else {\n        element = e.target;\n    }\n\n    // cuando seleccionen un servicio añadirle la clase seleccionado\n    if(element.classList.contains('selected')) {\n        element.classList.remove('selected');\n    } else {\n        element.classList.add('selected');\n    }\n}\n\nfunction nextPage() {\n    const nextPage = document.querySelector('#next');\n    nextPage.addEventListener('click', () => {\n        page++;\n        // volver a comprobar en que pagina esta el paginador\n        pagerButtons();\n    });\n}\n\nfunction previousPage() {\n    const previousPage = document.querySelector('#previous');\n    previousPage.addEventListener('click', () => {\n        page--;\n        // volver a comprobar en que pagina esta el paginador\n        pagerButtons();\n    });\n}\n\nfunction pagerButtons() {\n    const nextPage = document.querySelector('#next');\n    const previousPage = document.querySelector('#previous');\n\n    if(page === 1) {\n        previousPage.classList.add('hide')\n    } else if(page === 3) {\n        nextPage.classList.add('hide');\n        previousPage.classList.remove('hide');\n    } else {\n        previousPage.classList.remove('hide');\n        nextPage.classList.remove('hide');\n    }\n\n    // cambiar la seccion por la de la pagina\n    showSection();\n}\n\n"]}